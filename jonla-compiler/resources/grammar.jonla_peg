ast Term {
    Type()
    Var(name: Input)
    Let(name: Input, arg_type: Term, arg_value: Term, body: Term)
    FunType(name: Input, arg_type: Term, body_type: Term)
    FunConstruct(name: Input, arg_type: Term, body: Term)
    FunDestruct(func: Term, arg: Term)
}

rule identifier() -> Input {
    [ 'a'-'z' | 'A'-'Z' | '_' ]['a'-'z' | 'A'-'Z' | '0'-'9' | '_' ]*
}
